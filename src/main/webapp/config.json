{
    "ENV": "prod",
    "VERSION": "0.0.1-SNAPSHOT",
    "STATHAT": { 
        "bootstrap": "a0eJrxQFBovvwhgPrifi1CBDUmV4",
        "icu": "uryhasBFrhZI6QS9KxRRsSBMaEtD"
    },
    "GROUPS": [
        "zones.read",
        "zones.write",
        "idps.read",
        "idps.write",
        "clients.admin",
        "clients.write",
        "clients.read",
        "clients.secret",
        "scim.write",
        "scim.read",
        "scim.create",
        "scim.userids",
        "scim.zones",
        "scim.invite",
        "password.write",
        "oauth.approval",
        "oauth.login", 
        "approvals.me", 
        "openid", 
        "groups.update",
        "uaa.user",
        "uaa.resource",
        "uaa.admin"
    ],
    "GRANTS": [
      {
          "name": "client_credentials",
          "type": "oauth2",
          "token": true,
          "grant": true
      },
      {
          "name": "implicit",
          "type": "oauth2",
          "token": true,
          "grant": true
      },
      {
          "name": "password",
          "type": "oauth2",
          "token": true,
          "grant": true
      },
      {
          "name": "authorization_code",
          "type": "oauth2",
          "token": true,
          "grant": true
      },
      {
          "name": "auto_login",
          "type": "oauth2",
          "token": true,
          "grant": false
      },
      {
          "name": "passcode",
          "type": "oauth2",
          "token": true,
          "grant": false
      },
      {
          "name": "refresh_token",
          "type": "flag",
          "grant": true
      },
      {
          "name": "user_token",
          "type": "other",
          "grant": true
      },
      {
          "name": "saml2-bearer",
          "type": "other",
          "value": "urn:ietf:params:oauth:grant-type:saml2-bearer",
          "grant": true
      },
      {
          "name": "jwt-bearer",
          "type": "other",
          "value": "urn:ietf:params:oauth:grant-type:jwt-bearer",
          "grant": true
      }
    ],
    "ZONE_SCOPES": [
        { "template": "zones.<zone id>.admin", "description": "scope that permits operations in a designated zone by authenticating against the default zone, such as create identity providers or clients in another zone (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.read", "description": "scope that permits reading the given identity zone (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.clients.admin", "description": "translates into clients.admin after zone switch is complete (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.clients.read", "description": "translates into clients.read after zone switch is complete (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.clients.write", "description": "translates into clients.write after zone switch is complete (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.scim.read", "description": "translates into scim.read after zone switch is complete (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.scim.create", "description": "translates into scim.create after zone switch is complete (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.scim.write", "description": "translates into scim.write after zone switch is complete (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.scim.invite", "description": "translates into scim.invite after zone switch is complete (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.idps.read", "description": "translates into idps.read after zone switch is complete (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.idps.write", "description": "translates into idps.write after zone switch is complete (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.sps.read", "description": "translates into sps.read after zone switch is complete (used together with the X-Identity-Zone-Id header)" },
        { "template": "zones.<zone id>.sps.write", "description": "translates into sps.write after zone switch is complete (used together with the X-Identity-Zone-Id header)" }
    ],
    "RESOURCE_IDS": [
        "zones",
        "idps",
        "clients",
        "scim",
        "password",
        "oauth",
        "approvals", 
        "groups",
        "uaa"
    ],
    "HTTP_METHIDS": [
        "GET", "HEAD", "POST", "PUT", "PATCH", "DELETE", "OPTIONS", "TRACE"
    ],
    "HTTP_HEADERS": [
        "Accept", 
        "Accept-Charset", 
        "Accept-Encoding", 
        "Accept-Language", 
        "Accept-Ranges", 
        "Access-Control-Allow-Credentials", 
        "Access-Control-Allow-Headers", 
        "Access-Control-Allow-Methods", 
        "Access-Control-Allow-Origin", 
        "Access-Control-Expose-Headers", 
        "Access-Control-Max-Age", 
        "Access-Control-Request-Headers", 
        "Access-Control-Request-Method", 
        "Age", 
        "Allow", 
        "Authorization", 
        "Cache-Control", 
        "Connection", 
        "Content-Encoding", 
        "Content-Disposition", 
        "Content-Language", 
        "Content-Length", 
        "Content-Location", 
        "Content-Range", 
        "Content-Type", 
        "Cookie", 
        "Date", 
        "ETag", 
        "Expect", 
        "Expires", 
        "From", 
        "Host", 
        "If-Match", 
        "If-Modified-Since", 
        "If-None-Match", 
        "If-Range", 
        "If-Unmodified-Since", 
        "Last-Modified", 
        "Link", 
        "Location", 
        "Max-Forwards", 
        "Origin", 
        "Pragma", 
        "Proxy-Authenticate", 
        "Proxy-Authorization", 
        "Range", 
        "Referer", 
        "Retry-After", 
        "Server", 
        "Set-Cookie", 
        "Set-Cookie2", 
        "TE", 
        "Trailer", 
        "Transfer-Encoding", 
        "Upgrade", 
        "User-Agent", 
        "Vary", 
        "Via", 
        "Warning", 
        "WWW-Authenticate"
    ],
    "SETTING": {
        "version": 8,
        "debug": false,

        "url": "http://localhost:8080/uaa/",
        "clientId": "uaa_ui",
        "username": "admin",
        "loginType": "password",

        "authUrlPath": "oauth/authorize",
        "authRedirectUrl": "#/auth_redirect?",

        "authWindowType": "popup",
        "authWindowParam" :"toolbar=no,scrollbars=no,resizable=no,top=100,left=500,width=600,height=800",
    
        "sessionCheckUrl": "session_management"
    }
}