issuer:
  uri: https://((route))

encryption:
  encryption_keys:
  - label: uaa-encryption-key-1
    passphrase: ((uaa_encryption_key_1))
  active_key_label: uaa-encryption-key-1

scim:
  users:
  - admin|((admin_user_password))|admin|||zones.read,zones.write,idps.read,idps.write,clients.admin,clients.write,clients.read,clients.secret,scim.write,scim.read,scim.create,scim.userids,scim.zones,scim.invite,password.write,oauth.approval,oauth.login,approvals.me,openid,groups.update,uaa.user,uaa.resource,uaa.admin|uaa
  userids_enabled: true
  user:
    override: true

require_https: true

oauth:
  authorize:
    ssl: true
  # See https://github.com/cloudfoundry/uaa/blob/13992755850296da8a6d53308a70ecdac73b29e6/uaa/src/main/webapp/WEB-INF/spring/oauth-clients.xml#L35
  client:
    # Default override for clients
    override: true
    autoapprove:
      - uaa_ui
  clients:
    uaa_ui:
      resource-ids: uaa,ui
      scope: zones.read,zones.write,idps.read,idps.write,clients.admin,clients.write,clients.read,clients.secret,scim.write,scim.read,scim.create,scim.userids,scim.zones,scim.invite,password.write,oauth.approval,oauth.login,approvals.me,openid,groups.update,uaa.user,uaa.resource,uaa.admin
      authorized-grant-types: client_credentials,password,authorization_code,implicit
      authorities: clients.read,clients.write,clients.secret,uaa.admin,scim.read,scim.write,password.write
      redirect-uri: http://127.0.0.1:5500/src/main/webapp/index.html*/**
      # signup_redirect_url: 
      # change_email_redirect_url: 
      secret: ((admin_client_secret))
      
      override: true
      # access-token-validity: 1
      # refresh-token-validity: 1
      show-on-homepage: true
      app-launch-url: http://127.0.0.1:5500/src/main/webapp/index.html
      app-icon: iVBORw0KGgoAAAANSUhEUgAAAQQAAABtCAYAAABHhB8sAAAOGUlEQVR4Xu2dfawdRRnGf0sJVYhSIAFBDBALCipUQCkIBBGFhigfQiz4BYK2AhqrBCgEVIwKKKkYwV5TApFPRRRRDEVAMGDKlxa0IIEoFSxQlVYBaytlzXvvOfX0cs7OOzu7954999nk
      
      # Other Additional Information
      name: UAA_UI
      allowedproviders: 
        - uaa
      autoapprove:
        - clients.read
      approvals_deleted: true
      token_salt: uua_ui
      required_user_groups: 
        - uaa.user
      createdwith: default
      lastModified: 1553735643716
  user:
    authorities:
    - openid
    - scim.me
    - password.write
    - uaa.user
    - uaa.offline_token

jwt:
  token:
    refresh:
      format: opaque
    policy:
      accessTokenValiditySeconds: 43200
      refreshTokenValiditySeconds: 2592000
      global:
        accessTokenValiditySeconds: 43200
        refreshTokenValiditySeconds: 2592000
      activeKeyId: uaa-jwt-key-1
      keys:
        uaa-jwt-key-1:
          signingKey: ((uaa_jwt_signing_key.private_key))

login:
  selfServiceLinksEnabled: false
  serviceProviderKey: ((uaa_service_provider_ssl.private_key))
  serviceProviderKeyPassword: "" # TODO: Remove this when UAA defaults this value
  serviceProviderCertificate: ((uaa_service_provider_ssl.certificate))

assetBaseUrl: /resources/oss

zones:
  internal:
    hostnames:
      - ((route))

# See https://github.com/cloudfoundry/uaa/blob/13992755850296da8a6d53308a70ecdac73b29e6/uaa/src/main/webapp/WEB-INF/spring-servlet.xml#L124-L208
cors:
  xhr:
    allowed:
      headers:
        - Accept
        - Authorization
        - Content-Type
        - Accept-Language
        - Content-Language
        # for update
        - If-Match
        # for zone change
        - X-Identity-Zone-Id
        - X-Identity-Zone-Subdomain
  default:
    allowed:
      headers:
        - Accept
        - Authorization
        - Content-Type
        - Accept-Language
        - Content-Language
        # for update
        - If-Match
        # for zone change
        - X-Identity-Zone-Id
        - X-Identity-Zone-Subdomain

variables:
- name: admin_user_password
  type: password

- name: admin_client_secret
  type: password

- name: uaa_jwt_signing_key
  type: rsa

- name: uaa_encryption_key_1
  type: password

- name: default_ca
  type: certificate
  options:
    is_ca: true
    common_name: ca

- name: uaa_service_provider_ssl
  type: certificate
  options:
    ca: default_ca
    common_name: ((route))
    alternative_names: [((route))]